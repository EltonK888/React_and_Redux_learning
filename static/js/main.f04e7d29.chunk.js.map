{"version":3,"sources":["actions/actions.js","reducers/allReducers.js","components/item.jsx","containers/container.js","App.js","index.js"],"names":["changeValueHeaderAction","valueHeader","type","payload","changeValueTextAction","valueText","clearValuesAction","addTodoAction","_ref","todoHeader","todoText","backgroundColor","completeTodoAction","index","deleteTodoAction","combineReducers","items","state","arguments","length","undefined","action","newState","Object","toConsumableArray","concat","splice","Item","props","style","console","log","react_default","a","createElement","className","todoItem","onClick","clickComplete","clickDelete","connect","dispatch","bindActionCreators","handleClickComplete","event","target","getAttribute","handleClickDelete","Items","map","todo","item","key","onSubmit","preventDefault","alert","procItem","placeholder","value","onChange","handleValueHeader","handleValueText","store","createStore","reducers","ReactDOM","render","es","container","document","getElementById"],"mappings":"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","file":"static/js/main.f04e7d29.chunk.js","sourcesContent":["export const CHANGE_VALUE_HEADER = \"CHANGE_VALUE_HEADER\";\r\nexport const CHANGE_VALUE_TEXT = \"CHANGE_VALUE_TEXT\";\r\nexport const CLEAR_VALUES = \"CLEAR_VALUES\";\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const COMPLETE_TODO = \"COMPLETE_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\n\r\nexport const changeValueHeaderAction = (valueHeader) => {\r\n    return {\r\n        type: CHANGE_VALUE_HEADER,\r\n        payload: valueHeader\r\n    }\r\n}\r\n\r\nexport const changeValueTextAction = (valueText) => {\r\n    return {\r\n        type: CHANGE_VALUE_TEXT,\r\n        payload: valueText\r\n    }\r\n}\r\n\r\nexport const clearValuesAction = () => {\r\n    return {\r\n        type: CLEAR_VALUES\r\n    }\r\n}\r\n\r\nexport const addTodoAction = ({todoHeader, todoText, backgroundColor}) => {\r\n    return {\r\n        type: ADD_TODO,\r\n        todoHeader: todoHeader,\r\n        todoText: todoText,\r\n        backgroundColor: backgroundColor\r\n    }\r\n}\r\n\r\nexport const completeTodoAction = (backgroundColor, index) => {\r\n    return {\r\n        type: COMPLETE_TODO,\r\n        backgroundColor: backgroundColor,\r\n        index: index\r\n    }\r\n}\r\n\r\nexport const deleteTodoAction = (index) => {\r\n    return {\r\n        type: DELETE_TODO,\r\n        index: index\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { CHANGE_VALUE_HEADER, CHANGE_VALUE_TEXT, CLEAR_VALUES, ADD_TODO, COMPLETE_TODO, DELETE_TODO } from \"../actions/actions\";\r\n\r\nconst valueHeaderReducer = (state=\"\", action) => {\r\n    switch (action.type) {\r\n        case CHANGE_VALUE_HEADER:\r\n            return action.payload;\r\n        case CLEAR_VALUES:\r\n            return \"\";\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst valueTextReducer = (state=\"\", action) => {\r\n    switch(action.type) {\r\n        case CHANGE_VALUE_TEXT:\r\n            return action.payload;\r\n        case CLEAR_VALUES:\r\n            return \"\";\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst itemsReducer= (state=[], action) => {\r\n    let newState = [...state];\r\n    switch(action.type) {\r\n        case ADD_TODO:\r\n            return [...state, {todoHeader: action.todoHeader, todoText: action.todoText, backgroundColor: action.backgroundColor}];\r\n        case COMPLETE_TODO:\r\n            newState[action.index].backgroundColor = action.backgroundColor;\r\n            return newState;\r\n        case DELETE_TODO:\r\n            newState = [...state];\r\n            newState.splice(action.index, 1);\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    items: itemsReducer,\r\n    valueHeader: valueHeaderReducer,\r\n    valueText: valueTextReducer\r\n})","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Item = (props) => {\n    let style = {\n        backgroundColor: props.backgroundColor\n    }\n    console.log(props)\n    return (\n        <div className=\"card my-4\" style={style}>\n            <h2 className=\"text-center\">{props.todoItem}</h2>\n            <p className=\"ml-4\">{props.todoText}</p>\n            <div className=\"row justify-content-end\">\n                <div className=\"col-md-auto mb-2 mb-md-0\">\n                    <button index={props.index} className=\"btn btn-block btn-success btn-sm\" onClick={props.clickComplete}>Mark As Complete</button>\n                </div>\n                <div className=\"col-md-auto\">\n                    <button index={props.index} className=\"btn btn-block btn-danger btn-sm\" onClick={props.clickDelete}>Delete</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nItem.propTypes = {\n    todoItem: PropTypes.string,\n    todoText: PropTypes.string,\n    clickComplete: PropTypes.func,\n    clickDelete: PropTypes.func,\n    backgroundColor: PropTypes.string,\n    index: PropTypes.number\n}\nexport default Item;","import { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\"\r\nimport App from \"../App\";\r\nimport { changeValueHeaderAction, changeValueTextAction, clearValuesAction, addTodoAction, completeTodoAction, deleteTodoAction } from \"../actions/actions\"\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        items: state.items,\r\n        valueHeader: state.valueHeader.length === 0 ? \"\" : state.valueHeader,\r\n        valueText: state.valueText.length === 0 ? \"\" : state.valueText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        changeValueHeaderAction,\r\n        changeValueTextAction,\r\n        clearValuesAction,\r\n        addTodoAction,\r\n        completeTodoAction,\r\n        deleteTodoAction\r\n        }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import React from \"react\";\r\nimport Item from \"./components/item\";\r\n\r\nexport default (props) => {\r\n    const handleValueHeader = (event) => {\r\n        props.changeValueHeaderAction(event.target.value)\r\n    }\r\n\r\n    const handleValueText = (event) => {\r\n        props.changeValueTextAction(event.target.value)\r\n    }\r\n    \r\n    const procItem = (event) => {\r\n        event.preventDefault();\r\n        if (props.valueHeader !== \"\"){\r\n            props.addTodoAction({todoHeader: props.valueHeader, todoText: props.valueText, backgroundColor: \"white\"});\r\n            props.clearValuesAction();\r\n        } else {\r\n            alert(\"Can't enter empty field\");\r\n        }\r\n    }\r\n\r\n    const handleClickComplete = (event) => {\r\n        let index = event.target.getAttribute(\"index\");\r\n        props.completeTodoAction(\"green\", index);\r\n        console.log(\"mark as complete clicked\");\r\n    }\r\n\r\n    const handleClickDelete = (event) => {\r\n        console.log(\"Deleted clicked\");\r\n        let index = event.target.getAttribute(\"index\");\r\n        props.deleteTodoAction(index);\r\n    }\r\n\r\n    const Items = props.items.map((todo, index) => <Item key={index} index={index} todoItem={todo.todoHeader} todoText={todo.todoText} clickComplete={handleClickComplete} clickDelete={handleClickDelete} backgroundColor={todo.backgroundColor}/>)\r\n    return (\r\n            <div className=\"container\">\r\n                <h1>Todo List</h1>\r\n                <div className=\"content\">\r\n                    <form onSubmit={(event) => procItem(event)}>\r\n                    <div className = \"input-group w-100\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"What do you need to do?\" value={props.valueHeader} onChange={(event) => handleValueHeader(event)}></input>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Additional Notes (optional)\" value={props.valueText} onChange={(event) => handleValueText(event)}></input>\r\n                        <div className=\"input-group-append\">\r\n                            <input className=\"btn btn-secondary btn-sm\" type=\"submit\" value=\"submit\"/>\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n                    {Items}\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport \"./index.css\"\r\nimport { createStore } from \"redux\";\r\nimport reducers from \"./reducers/allReducers\";\r\nimport { Provider } from \"react-redux\";\r\nimport Container from \"./containers/container\"\r\n\r\nconst initialState = {\r\n    items: [],\r\n    valueHeader: \"\",\r\n    valueText: \"\"\r\n}\r\nconst store = createStore(reducers, initialState);\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Container/>\r\n    </Provider>, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}